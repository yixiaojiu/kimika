syntax = "proto3";
package remote;

service Remote {

	rpc RegisterReceiver(RegisterReceiverRequest) returns (RegisterResponse);

	rpc RegisterContent(RegisterContent) returns (RegisterResponse);

	rpc GetContent(EmptyRequest) returns (stream RegisterContent);

	rpc GetReceivers(EmptyRequest) returns (stream GetReceiversResponse);

	rpc Send(stream SendRequest) returns (EmptyResponse);

	rpc Receive(ReceiveRequest) returns (stream ReceiveResponse);
}

message EmptyRequest {
}

message EmptyResponse {
}

message RegisterReceiverRequest {
	string alias = 1;
}

message RegisterResponse {
	string id = 1;
}

message RegisterContent {

	enum Type {
		FILE = 0;
		MESSAGE = 1;
	}

	Type content_type = 1;

	optional int64 size = 3;

	optional string name = 4;
}

message GetReceiversResponse {
	message Receiver {
		string alias = 1;
		string ip = 2;
	}

	repeated Receiver receivers = 1;
}

message SendRequest {
	bytes data = 1;
}

message ReceiveRequest {
	string id = 1;
}

message ReceiveResponse {
	bytes data = 1;
}