name: release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_INCREMENTAL: 0
permissions:
  contents: write
jobs:
  release:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            deb: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            deb: true
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install gcc-aarch64-linux-gnu
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -yq gcc-aarch64-linux-gnu

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '25.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Setup cache
        uses: Swatinem/rust-cache@v2.7.3
        with:
          key: ${{ matrix.target }}

      - name: Build binary
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: /usr/bin/aarch64-linux-gnu-gcc
        run: cargo build -p kimika --release --locked --target=${{ matrix.target }}

      - name: Package (*nix)
        if: runner.os != 'Windows'
        run: |
          tar -cv LICENSE README.md \
            -C target/${{ matrix.target }}/release/ kimika |
            gzip --best > \
            kimika-${{ matrix.target }}.tar.gz
      - name: Package (Windows)
        if: runner.os == 'Windows'
        env:
          TARGET_NAME: kimika-${{ matrix.target }}
        run: |
          New-Item -ItemType Directory -Path ${env:TARGET_NAME}
          Copy-Item -Path "target\${{ matrix.target }}\release\kimika.exe" -Destination ${env:TARGET_NAME}
          Copy-Item -Path "README.md", "LICENSE" -Destination ${env:TARGET_NAME}
          Compress-Archive -Path ${env:TARGET_NAME} -DestinationPath "${env:TARGET_NAME}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            *.tar.gz
            *.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.tar.gz
            *.zip
          generate_release_notes: true
